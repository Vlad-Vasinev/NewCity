// width
=r($width)
  @media only screen and (max-width: $width+ "px")
    @content

=ro($width, $orientation: landscape)
  @media only screen and (max-width: $width+ "px") and (orientation: $orientation)
    @content

=rmin($width)
  @media only screen and (min-width: $width+ "px")
    @content

// height
=rh($height)
  @media only screen and (max-height: $height + "px")
    @content

=rhmin($height)
  @media only screen and (min-height: $height + "px")
    @content

=text-overflow
  overflow: hidden
  text-overflow: ellipsis
  white-space: nowrap

=imgContain
  position: absolute
  top: 0
  left: 0
  size: 100%
  object-fit: contain
  object-position: center

// retina
=retina
  @media only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min-device-pixel-ratio: 2)
    //@conten$

// vertical-align at center
=vcenter
  position: absolute
  top: 50%
  left: 50%
  transform: translate(-50%,-50%)

// photoshop to em
=letter-spacing($letter-spacing, $fontSize: 16)
  letter-spacing: ($letter-spacing / 1000) + em

// sketch to em
@function em($pixels, $fontSize: 16)
  @return #{$pixels / $fontSize}em

=prevent-text
  word-break: break-all
  word-break: break-word
  hyphens: auto

=scrollbar
  &::-webkit-scrollbar
    @content

=scrollbar-track
  &::-webkit-scrollbar-track
    @content

=scrollbar-thumb
  &::-webkit-scrollbar-thumb
    @content

=scrollbar-track-piece
  &::-webkit-scrollbar-track-piece
    @content

=hide-scrollbar
  -ms-overflow-style: none
  scrollbar-width: none
  &::-webkit-scrollbar
    display: none
=no-drag
  user-drag: none
  -webkit-user-drag: none
  user-select: none
  -moz-user-select: none
  -webkit-user-select: none
  -ms-user-select: none

//triangle
=arr($width, $height, $bg, $direction)
  width: 0px
  height: 0px
  border-style: solid
  @if $direction == t
    border-width: 0 $width / 2 + px $height + px $width / 2 + px
    border-color: transparent transparent $bg transparent
  @if $direction == r
    border-width: $height / 2 + px 0 $height / 2 + px $width + px
    border-color: transparent transparent transparent $bg
  @if $direction == b
    border-width: $height + px $width / 2 + px 0 $width / 2 + px
    border-color: $bg transparent transparent transparent
  @if $direction == l
    border-width: $height / 2 + px $width + px $height / 2 + px 0
    border-color: transparent $bg transparent transparent
  @if $direction == tl
    border-width: $height + px $width + px 0 0
    border-color: $bg transparent transparent transparent
  @if $direction == tr
    border-width: 0 $width + px $height + px 0
    border-color: transparent $bg transparent transparent
  @if $direction == br
    border-width: 0 0 $height + px $width + px
    border-color: transparent transparent $bg transparent
  @if $direction == bl
    border-width: $width + px 0 0 $height + px
    border-color: transparent transparent transparent $bg
// example
// +arr(500,50, #000, l)
// +arr(500,50, #000, bl)
@mixin unselectable()
  -webkit-touch-callout: none
  -webkit-user-select: none
  -khtml-user-select: none
  -moz-user-select: none
  -ms-user-select: none
  user-select: none

=better-blur($radius)
  -webkit-filter: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a' x='0' y='0' width='1' height='1' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='#{$radius}' result='b'/%3E%3CfeMorphology operator='dilate' radius='#{$radius}'/%3E %3CfeMerge%3E%3CfeMergeNode/%3E%3CfeMergeNode in='b'/%3E%3C/feMerge%3E%3C/filter%3E %3C/svg%3E#a")
  filter: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a' x='0' y='0' width='1' height='1' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='#{$radius}' result='b'/%3E%3CfeMorphology operator='dilate' radius='#{$radius}'/%3E %3CfeMerge%3E%3CfeMergeNode/%3E%3CfeMergeNode in='b'/%3E%3C/feMerge%3E%3C/filter%3E %3C/svg%3E#a")

$maxWidth: 3840
$maxWidthContiner: 1920
$minWidth: 1280

// @mixin adaptiveProperty($property, $startSize, $minSize, $type)
//   $addSize: $startSize - $minSize
//   // Если меньше контейнера
//   @if $type=="max"
//     #{$property}: $startSize + px
//     @media ( max-width: #{$maxWidthContiner + px})
//       #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))
//   // Если больше контейнера
//   @else if $type=="min"
//     #{$property}: $startSize + px
//     @media ( min-width: #{$maxWidthContiner + px})
//       #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

//   @else
//     #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

// размер как в макете
@mixin aProp($property, $startSize)
  $minSize: ($startSize / 1920 ) * 1280
  $addSize: $startSize - $minSize
  //@media ( min-width: #{$maxWidthContiner + px})
  #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

@function aCalc($startSize)
  $minSize: ($startSize / 1920 ) * 1280
  $addSize: $startSize - $minSize
  $result: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

  @return $result

  
// @mixin aPadding($startSizeTop: 0, $startSizeRight: 0, $startSizeBottom: 0, $startSizeLeft: 0)

//   $minSizeTop: ($startSizeTop / 1920 ) * 1280
//   $addSizeTop: $startSizeTop - $minSizeTop
//   padding-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

//   $minSizeRight: ($startSizeRight / 1920 ) * 1280
//   $addSizeRight: $startSizeRight - $minSizeRight
//   padding-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

//   $minSizeBottom: ($startSizeBottom / 1920 ) * 1280
//   $addSizeBottom: $startSizeBottom - $minSizeBottom
//   padding-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

//   $minSizeLeft: ($startSizeLeft / 1920 ) * 1280
//   $addSizeLeft: $startSizeLeft - $minSizeLeft
//   padding-left: calc(#{$minSizeLeft + px} + #{$addSizeLeft} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

@mixin aPadding($startSizeTop: undefined, $startSizeRight: undefined, $startSizeBottom: undefined, $startSizeLeft: undefined)
  @if $startSizeTop != undefined and $startSizeRight != undefined and $startSizeBottom != undefined and $startSizeLeft != undefined
    // adaptiveM: 1
    @if $startSizeTop != undefined
      $minSizeTop: ($startSizeTop / 1920 ) * 1280
      $addSizeTop: $startSizeTop - $minSizeTop
      padding-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    @if $startSizeRight != undefined
      $minSizeRight: ($startSizeRight / 1920 ) * 1280
      $addSizeRight: $startSizeRight - $minSizeRight
      padding-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    @if $startSizeBottom != undefined
      $minSizeBottom: ($startSizeBottom / 1920 ) * 1280
      $addSizeBottom: $startSizeBottom - $minSizeBottom
      padding-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    @if $startSizeLeft != undefined
      $minSizeLeft: ($startSizeLeft / 1920 ) * 1280
      $addSizeLeft: $startSizeLeft - $minSizeLeft
      padding-left: calc(#{$minSizeLeft + px} + #{$addSizeLeft} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))
  @else if $startSizeTop != undefined and $startSizeRight != undefined and $startSizeBottom != undefined
    
    // adaptiveM: 2
    $minSizeTop: ($startSizeTop / 1920 ) * 1280
    $addSizeTop: $startSizeTop - $minSizeTop
    padding-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeRight: ($startSizeRight / 1920 ) * 1280
    $addSizeRight: $startSizeRight - $minSizeRight
    padding-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeBottom: ($startSizeBottom / 1920 ) * 1280
    $addSizeBottom: $startSizeBottom - $minSizeBottom
    padding-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

  @else if $startSizeTop != undefined and $startSizeRight != undefined

    // adaptiveM: 3
    $minSizeTop: ($startSizeTop / 1920 ) * 1280
    $addSizeTop: $startSizeTop - $minSizeTop
    padding-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeRight: ($startSizeRight / 1920 ) * 1280
    $addSizeRight: $startSizeRight - $minSizeRight
    padding-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeBottom: ($startSizeTop / 1920 ) * 1280
    $addSizeBottom: $startSizeTop - $minSizeBottom
    padding-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeLeft: ($startSizeRight / 1920 ) * 1280
    $addSizeLeft: $startSizeRight - $minSizeLeft
    padding-left: calc(#{$minSizeLeft + px} + #{$addSizeLeft} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

@mixin aMargin($startSizeTop: undefined, $startSizeRight: undefined, $startSizeBottom: undefined, $startSizeLeft: undefined)
  @if $startSizeTop != undefined and $startSizeRight != undefined and $startSizeBottom != undefined and $startSizeLeft != undefined
    // adaptiveM: 1
    @if $startSizeTop != undefined
      $minSizeTop: ($startSizeTop / 1920 ) * 1280
      $addSizeTop: $startSizeTop - $minSizeTop
      margin-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    @if $startSizeRight != undefined
      $minSizeRight: ($startSizeRight / 1920 ) * 1280
      $addSizeRight: $startSizeRight - $minSizeRight
      margin-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    @if $startSizeBottom != undefined
      $minSizeBottom: ($startSizeBottom / 1920 ) * 1280
      $addSizeBottom: $startSizeBottom - $minSizeBottom
      margin-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    @if $startSizeLeft != undefined
      $minSizeLeft: ($startSizeLeft / 1920 ) * 1280
      $addSizeLeft: $startSizeLeft - $minSizeLeft
      margin-left: calc(#{$minSizeLeft + px} + #{$addSizeLeft} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))
  @else if $startSizeTop != undefined and $startSizeRight != undefined and $startSizeBottom != undefined
    
    // adaptiveM: 2
    $minSizeTop: ($startSizeTop / 1920 ) * 1280
    $addSizeTop: $startSizeTop - $minSizeTop
    margin-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeRight: ($startSizeRight / 1920 ) * 1280
    $addSizeRight: $startSizeRight - $minSizeRight
    margin-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeBottom: ($startSizeBottom / 1920 ) * 1280
    $addSizeBottom: $startSizeBottom - $minSizeBottom
    margin-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

  @else if $startSizeTop != undefined and $startSizeRight != undefined

    // adaptiveM: 3
    $minSizeTop: ($startSizeTop / 1920 ) * 1280
    $addSizeTop: $startSizeTop - $minSizeTop
    margin-top: calc(#{$minSizeTop + px} + #{$addSizeTop} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeRight: ($startSizeRight / 1920 ) * 1280
    $addSizeRight: $startSizeRight - $minSizeRight
    margin-right: calc(#{$minSizeRight + px} + #{$addSizeRight} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeBottom: ($startSizeTop / 1920 ) * 1280
    $addSizeBottom: $startSizeTop - $minSizeBottom
    margin-bottom: calc(#{$minSizeBottom + px} + #{$addSizeBottom} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))

    $minSizeLeft: ($startSizeRight / 1920 ) * 1280
    $addSizeLeft: $startSizeRight - $minSizeLeft
    margin-left: calc(#{$minSizeLeft + px} + #{$addSizeLeft} * ((100vw - #{$minWidth + px}) / #{$maxWidthContiner - $minWidth}))
